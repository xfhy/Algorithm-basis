#include<iostream>
#include<string>
using namespace std;

/*
删除问题
2016年11月5日19:28:20

题目：

键盘输入一个高精度的正整数ｎ（<=240位），

去掉任意ｓ个数字后剩下的数字按原左右次序将组成一个新的正整数。

编程对给定的ｎ和ｓ，寻找一种方案，使得剩下的数最小。

Simple Input
 178543
 4
Simple Output
 13
 
思路：
每一步总是选择一个使剩下的数最小的数字删除，即按高位到低位的顺序搜索，
若各位数字递增，则删除最后一个数字；否则删除第一个递减区间的首字符，
这样删一位便形成了一个新的数字串。然后回到串首，
按上述规则再删除下一个数字
*/

int main()
{
   string n;
   int s,i,x,l,m;
   while(cin>>n>>s)
   {
        i=-1,m=0,x=0;
        l=n.length(); 
        while(x<s&&m==0)
         {
             i++;
             if(n[i]>n[i+1])//出现递减,删除递减的首数字 
              {
                  n=n.erase(i,1);   //删除从i开始的1个字符 
                  x++;// x统计删除数字的个数 
                  i=-1;//从头开始查递减区间 
              } 
             if(i==l-x-2&&x<s)
             	m=1;//已经无递减区间,m=1脱离循环 
         } 
     cout<<n.substr(0,l-s+x)<<endl;//只打印剩下的左边l-(s-x)个数字 
   } 
   return 0;   
}